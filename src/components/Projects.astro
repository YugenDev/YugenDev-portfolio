---
import GitHub from "../icons/Github.astro";
import React from "../icons/React.astro";
import Tailwind from "../icons/Tailwind.astro";
import Link from "../icons/Link.astro";
import LinkButton from "./LinkButton.astro";
import Express from "../icons/Express.astro";
import Docker from "../icons/Docker.astro";
import Go from "../icons/Go.astro";
import Traefik from "../icons/Traefik.astro";
import RabbitMQ from "../icons/Rabbitmq.astro";
import Spring from "../icons/Spring.astro";
import ChatGPT from "../icons/ChatGPT.astro";
import Postgres from "../icons/Postgres.astro";
import AstroIcon from "../icons/AstroIcon.astro";
import NextJS from "../icons/NextJS.astro";
import FastAPI from "../icons/FastAPI.astro";

const TAGS = {
  REACT: {
    name: "React",
    class: "bg-black text-white",
    icon: React,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-black text-white",
    icon: Tailwind,
  },
  EXPRESS: {
    name: "ExpressJS",
    class: "bg-black text-white",
    icon: Express,
  },
  CHATGPT: {
    name: "ChatGPT",
    class: "bg-black text-white",
    icon: ChatGPT,
  },
  NEXTJS: {
    name: "NextJS",
    class: "bg-black text-white",
    icon: NextJS,
  },
  FASTAPI: {
    name: "FastAPI",
    class: "bg-black text-white",
    icon: FastAPI,
  },
  ASTRO: {
    name: "Astro",
    class: "bg-black text-white",
    icon: AstroIcon,
  },
  DOCKER: {
    name: "Docker",
    class: "bg-black text-white",
    icon: Docker,
  },
  SPRING: {
    name: "Spring",
    class: "bg-black text-white",
    icon: Spring,
  },
  GO: {
    name: "Go",
    class: "bg-black text-white",
    icon: Go,
  },
  RABBITMQ: {
    name: "RabbitMQ",
    class: "bg-black text-white",
    icon: RabbitMQ,
  },
  TRAEFIK: {
    name: "Traefik",
    class: "bg-black text-white",
    icon: Traefik,
  },
  POSTGRES: {
    name: "Postgres",
    class: "bg-black text-white",
    icon: Postgres,
  },
};

const PROJECTS = [
  {
    title: "Black Mesa Bank | BMB",
    description:
      "Sucursal virtual bancaria con una interfaz pulida y amigable para los usuarios, un sistema de bolsillos y un chatBot que consume la API de chatGPT y se integra con tus datos bancarios para darte recomendaciones.",
    link: "",
    github: "https://github.com/Pablo-Berrio/black_mesa",
    image: "./pictures/black-mesa.webp",
    tags: [TAGS.REACT, TAGS.EXPRESS, TAGS.CHATGPT],
  },
  {
    title: "Movie Reservation System",
    description:
      "Sistema de reservas y administración para un Cine, autenticación, sistema de roles y basado en microservicios. [EN DESARROLLO]",
    link: "",
    github: "https://github.com/YugenDev/rm-movie_reservation-ml",
    image: "./pictures/movie_reservation_system.webp",
    tags: [
      TAGS.FASTAPI,
      TAGS.DOCKER,
      TAGS.SPRING,
      TAGS.GO,
      TAGS.RABBITMQ,
      TAGS.TRAEFIK,
    ],
  },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt="Imagen del proyecto"
              class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="grid grid-cols-3 gap-2 mb-2 gap-x-2">
              {tags.map((tag) => (
                <li class="flex items-center justify-center">
                  <span
                    class={`flex items-center justify-center gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 min-w-[120px] min-h-[25px]`}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHub class="size-6" />
                  Code
                </LinkButton>
              )}
              {link && (
                <LinkButton href={link}>
                  <Link class="size-4" />
                  Preview
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
